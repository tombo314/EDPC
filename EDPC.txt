A: AC dp[i] := i番目の足場に辿り着くときのコストの最小値
B: AC dp[i] := i番目の足場に辿り着くときのコストの最小値
C: AC dp[i][j] := i日目に活動jを行った時の幸福度の最大値
D: AC dp[i][j] := i個選んで、重さの合計がjのときの価値の最大値
E: AC dp[i][j] := i個選んで、価値の合計がjのときの重さの最小値
F: AC dp[i][j] := Sをi文字目まで、Tをj文字目まで見たときのLCSの長さ 復元
G: AC dp[i] := 頂点iまでのパス長の最大値
H: AC dp[i][j] := 座標(i, j)までの経路の場合の数
I: AC dp[i][j] := コインをi枚目まで見て、表向きのコインがj枚である確率
J: AC f(i, j, k) := 寿司が1個の皿がi枚、2個の皿がj枚、3個の皿がk枚であるとき、
                    すべての寿司が無くなるまでの操作回数の期待値
K: AC dp[i] := 石がi個あるとき、先手が勝つならtrue
L: AC f(i, j) := 区間[i, j]が残っているとき、その手番で得られるX-Y(Y-X)の最大値
M: AC dp[i][j] := i人の子供にj個の飴を分けるときの場合の数
N: AC f(i, j) := 区間[i, j]が残っているとき、支払うコストの総和の最小値
O: AC dp[i] := 既に選ばれた男性の集合がiのとき、ペアを作る場合の数
P: AC dp[i] := 頂点iを親とする部分木について、頂点の色の組み合わせの場合の数
Q: AC dp[i] := 最後に選んだ花の高さがiのとき、花の美しさの総和の最大値